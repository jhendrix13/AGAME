function Funcs(){}

Funcs.prototype.timeToString = function (time,append) {
    time = (time / 1000);
    var timestr = '';

    if (time >= 3600) {
            timestr = Math.round(time / 3600) + ' hours(s)';
    } else if (time >= 60) {
            timestr = Math.round(time / 60) + ' minutes(s)';
    } else {
            timestr = Math.round(time) + ' second(s)';
    }

    return timestr + ' '+ append;
}

Funcs.prototype.stringSize = function(string){
    return string.length * 2;
}

Funcs.prototype.millisecondsToMinutes = function(milliseconds){
    return ((milliseconds/1000)/60).toFixed(2)+' minutes';
}

Funcs.prototype.x = function(object) {
    var objectList = [];
    var stack = [ object ];
    var bytes = 0;

    while ( stack.length ) {
        var value = stack.pop();

        if ( typeof value === 'boolean' ) {
            bytes += 4;
        }
        else if ( typeof value === 'string' ) {
            bytes += value.length * 2;
        }
        else if ( typeof value === 'number' ) {
            bytes += 8;
        }
        else if
        (
            typeof value === 'object'
            && objectList.indexOf( value ) === -1
        )
        {
            objectList.push( value );

            for( i in value ) {
                stack.push( value[ i ] );
            }
        }
    }
    
    return bytes;
}

Funcs.prototype.objSize = function(obj) {
    var size = 0, key;
    for(key in obj) {
        if(obj.hasOwnProperty(key))
            size++;
    }
    return size;
}

Funcs.prototype.removeArrayElement = function(element, array){
    var index = array.indexOf(element);
    array.splice(index, 1);
    return array;
}

Funcs.prototype.numberFormat = function(x) {
    return Math.round(x).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}

Funcs.prototype.rand = function (min, max) {
    return Math.floor((Math.random() * max) + min);
}

Funcs.prototype.removeUndefined = function(array){
    var newArray = {};

    if(this.objSize(array) > 0) {
        for(var x in array) {
            if(typeof array[x] != 'undefined')
                newArray[x] = array[x];
        }
    }

    return newArray;
}

Funcs.prototype.randomObjectElement = function(obj) {
    var keys = Object.keys(obj)
    return keys[keys.length * Math.random() << 0];
}

exports.Funcs = Funcs;